#!/bin/bash

# ============================================
# SCRIPT DE CONFIGURACI√ìN COMPLETA DE BASE DE DATOS
# Ejecuta todo el proceso de setup de la base de datos
# ============================================

echo "üöÄ INICIANDO CONFIGURACI√ìN COMPLETA DE BASE DE DATOS"
echo "===================================================="
echo ""

# Verificar que las variables de entorno est√©n configuradas
echo "üîç Verificando configuraci√≥n..."
if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ]; then
    echo "‚ùå Error: NEXT_PUBLIC_SUPABASE_URL no est√° configurado"
    echo "   Por favor configura las variables en .env.local"
    exit 1
fi

if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
    echo "‚ùå Error: SUPABASE_SERVICE_ROLE_KEY no est√° configurado"
    echo "   Por favor configura las variables en .env.local"
    exit 1
fi

echo "‚úÖ Variables de entorno configuradas correctamente"
echo ""

# Extraer informaci√≥n de la URL
DB_HOST=$(echo $NEXT_PUBLIC_SUPABASE_URL | sed 's|https://||' | sed 's|\.supabase\.co||').supabase.co
DB_NAME="postgres"
DB_USER="postgres"

echo "üîß Configuraci√≥n de conexi√≥n:"
echo "   Host: $DB_HOST"
echo "   Database: $DB_NAME"
echo "   User: $DB_USER"
echo ""

# Verificar si psql est√° instalado
if ! command -v psql &> /dev/null; then
    echo "‚ùå PostgreSQL client (psql) no est√° instalado"
    echo ""
    echo "üí° OPCIONES DE INSTALACI√ìN:"
    echo ""
    echo "   Windows (con Chocolatey):"
    echo "   choco install postgresql"
    echo ""
    echo "   Windows (manual):"
    echo "   1. Descarga desde: https://www.postgresql.org/download/windows/"
    echo "   2. O usa la versi√≥n portable de PostgreSQL"
    echo ""
    echo "   macOS:"
    echo "   brew install postgresql"
    echo ""
    echo "   Ubuntu/Debian:"
    echo "   sudo apt-get install postgresql-client"
    echo ""
    echo "üîÑ Despu√©s de instalar, ejecuta nuevamente este script"
    exit 1
fi

echo "‚úÖ PostgreSQL client disponible"
echo ""

# Solicitar contrase√±a de forma segura
echo "üîë Necesitamos la contrase√±a de la base de datos"
echo "   Ve a https://supabase.com/dashboard/project/cbaxjoozbnffrryuywno/settings/database"
echo "   Y busca la 'Connection string' para obtener la contrase√±a"
echo ""
read -s -p "Ingresa la contrase√±a de PostgreSQL: " DB_PASSWORD
echo ""
echo ""

# Paso 1: Verificaci√≥n pre-ejecuci√≥n
echo "üìã PASO 1: VERIFICACI√ìN PRE-EJECUCI√ìN"
echo "======================================"
PGPASSWORD=$DB_PASSWORD psql -h db.$DB_HOST -U $DB_USER -d $DB_NAME -f PRE_EXECUTION_CHECK.sql

if [ $? -ne 0 ]; then
    echo "‚ùå Error en la verificaci√≥n pre-ejecuci√≥n"
    echo "   Revisa la conexi√≥n y credenciales"
    exit 1
fi

echo ""
echo "‚úÖ Verificaci√≥n pre-ejecuci√≥n completada"
echo ""

# Confirmar ejecuci√≥n del esquema
echo "‚ö†Ô∏è  ATENCI√ìN: Vas a ejecutar el esquema unificado de base de datos"
echo "   Esto crear√°/actualizar√° las tablas principales del sistema"
echo ""
read -p "¬øContinuar con la ejecuci√≥n del esquema? (y/N): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "üõë Ejecuci√≥n cancelada por el usuario"
    exit 1
fi

echo ""

# Paso 2: Ejecutar esquema unificado
echo "üî® PASO 2: EJECUTANDO ESQUEMA UNIFICADO"
echo "======================================"
PGPASSWORD=$DB_PASSWORD psql -h db.$DB_HOST -U $DB_USER -d $DB_NAME -f UNIFIED_DATABASE_SCHEMA.sql

if [ $? -ne 0 ]; then
    echo "‚ùå Error en la ejecuci√≥n del esquema"
    echo "   Revisa los logs anteriores para m√°s detalles"
    exit 1
fi

echo ""
echo "‚úÖ Esquema unificado ejecutado exitosamente"
echo ""

# Paso 3: Verificaci√≥n post-ejecuci√≥n
echo "üîç PASO 3: VERIFICACI√ìN POST-EJECUCI√ìN"
echo "====================================="
PGPASSWORD=$DB_PASSWORD psql -h db.$DB_HOST -U $DB_USER -d $DB_NAME -f POST_EXECUTION_VERIFY.sql

if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  Advertencia: Error en la verificaci√≥n post-ejecuci√≥n"
    echo "   El esquema podr√≠a haberse ejecutado parcialmente"
else
    echo ""
    echo "‚úÖ Verificaci√≥n post-ejecuci√≥n completada"
fi

echo ""

# Preguntar sobre datos de ejemplo
echo "üå± ¬øDeseas insertar datos de ejemplo para desarrollo?"
echo "   Esto incluye usuarios, proyectos y conexiones de prueba"
echo ""
read -p "¬øInsertar datos de ejemplo? (y/N): " -n 1 -r
echo ""
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "üìù PASO 4: INSERTANDO DATOS DE EJEMPLO"
    echo "====================================="
    PGPASSWORD=$DB_PASSWORD psql -h db.$DB_HOST -U $DB_USER -d $DB_NAME -f SAMPLE_DATA.sql
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "‚úÖ Datos de ejemplo insertados exitosamente"
    else
        echo "‚ùå Error al insertar datos de ejemplo"
        echo "   La base de datos funciona, pero sin datos de prueba"
    fi
else
    echo "‚è≠Ô∏è  Saltando inserci√≥n de datos de ejemplo"
fi

echo ""
echo "üéâ CONFIGURACI√ìN DE BASE DE DATOS COMPLETADA"
echo "==========================================="
echo ""
echo "üìä RESUMEN:"
echo "   ‚úÖ Esquema unificado ejecutado"
echo "   ‚úÖ Tablas principales creadas"
echo "   ‚úÖ Pol√≠ticas RLS configuradas"
echo "   ‚úÖ √çndices optimizados"
echo "   ‚úÖ Funciones y triggers activados"
echo ""
echo "üöÄ PR√ìXIMOS PASOS:"
echo "   1. Ejecuta: npm run dev"
echo "   2. Ve a: http://localhost:3000"
echo "   3. Registra un usuario de prueba"
echo "   4. Explora la aplicaci√≥n"
echo ""
echo "üìã ENDPOINTS √öTILES:"
echo "   ‚Ä¢ Health Check: http://localhost:3000/api/health"
echo "   ‚Ä¢ M√©tricas: http://localhost:3000/api/metrics (requiere admin key)"
echo ""
echo "üéØ ¬°StartupMatch est√° listo para usar!"
